import os
def find_prj_root(path=os.getcwd()):
    if os.path.isfile(os.path.join(path,".PRJ_ROOT")):
        return path
    else:
        if path:
            return find_prj_root(os.path.dirname(path))
        else:
            raise Exception("Can not find the PRJ_ROOT directory")

PRJ_ROOT=find_prj_root()
ROOT = os.path.dirname(PRJ_ROOT)
SRC_DIR=PRJ_ROOT+'/local/src'
BIN_DIR=PRJ_ROOT+'/local/bin'
SHR_DIR=PRJ_ROOT+'/local/share'
DATASET_DIR=PRJ_ROOT+'/dataset'
PLH_DIR=DATASET_DIR+"/snake_workflow"


GENOME="GrCh38"
BINNING="variable_500000_101_bwa"

REF=SHR_DIR+"/data/genome.fa"
GINKGO_BINS=SHR_DIR+"/data/ginkgo_variable_500000_bins.bed"

WGSIM=SRC_DIR+"/cnsc_simulator"

SIMULATOR=BIN_DIR+"/main.par"
MAKE_GT=BIN_DIR+"/read_tree"
SPLIT_GT=BIN_DIR+"/sep_ground_truth"
BIN_GT=BIN_DIR+"/make_ginkgo_beds"
MK_SEGCOPY=BIN_DIR+"/make_segcopy"
HEATMAP=BIN_DIR+"/heatmap"
MK_NEWICK=BIN_DIR+"/weighted_dot_to_newick"
MK_DIST_MATRIX=BIN_DIR+"/newick_to_mat"
MK_DOT=BIN_DIR+"/mk_dot"
PREPROC=BIN_DIR+"/preproc"
PREPROC_UMAP=BIN_DIR+"/preproc_umap"
MERGE_METRICS=BIN_DIR+"/merge_clustering_stats"
TIME_STATS=BIN_DIR+"/time_stats"
APN_STATS=BIN_DIR+"/apn_stats"
STABILITY=BIN_DIR+"/cl_stability"
INT_VALIDATION=BIN_DIR+"/cl_validity"
NWK_HEATMAP=BIN_DIR+"/plot_newick_heatmap"
MK_CLUSTERS_HEATMAP=BIN_DIR+"/cluster_heatmap"
MK_CLUSTERS_HEATMAP_AGGL=BIN_DIR+"/plot_aggl_heatmap"
TREE_CLUSTER=BIN_DIR+"/TreeCluster"
EXT_VALIDATION=BIN_DIR+"/cl_external_validation"
PLT_GT_CLUSTERS=BIN_DIR+"/plot_newick_clusters"
MERGE_ALL=BIN_DIR+"/merge_all"


TOOLS = {
    'affinity': BIN_DIR+'/affinity.py',
    'agglomerative': BIN_DIR+'/agglomerative.py',
    'birch': BIN_DIR+'/birch.py',
    'kmeans': BIN_DIR+'/kmeans.py',
    'hdbscan':BIN_DIR+'/hdbscan_.py',
    'dbscan':BIN_DIR+'/dbscan.py',

}

TOOLS_ = {
    'affinity': SRC_DIR+'/affinity.py',
    'birch': SRC_DIR+'/birch.py',
    'kmeans': SRC_DIR+'/kmeans.py',
    'hdbscan':SRC_DIR+'/hdbscan_.py',
    'dbscan':SRC_DIR+'/dbscan.py',

}
LINKAGE=["ward", "complete", "average", "single"]

CLUSTERINGS=["affinity", "agglomerative_average", "agglomerative_complete", 
            "agglomerative_single", "agglomerative_ward", "birch", 
            "dbscan",  "hdbscan", "kmeans"]
CLUSTERINGS_STR = "affinity agglomerative_average agglomerative_complete agglomerative_single agglomerative_ward birch dbscan hdbscan kmeans"

EXP = {
    "Exp100" : {
        "n" : 100
    },
    "Exp200" : {
        "n" : 200
    },
    "Exp400" : {
        "n" : 400
    }

}

SMALL_GENOME=SHR_DIR+"/data/small_genome.fa"

EXP_PHYLICS = {
    "Exp1" : {
        "n" : 2500
    },
    "Exp2" : {
        "n" : 2500
    },
    "Exp3" : {
        "n" : 2500
    }

}

SAMPLES=["Sample1", "Sample2", "Sample3", "Sample4", "Sample5",
        "Sample6", "Sample7", "Sample8", "Sample9", "Sample10",
        "Sample11", "Sample12", "Sample13", "Sample14", "Sample15",
        "Sample16", "Sample17", "Sample18", "Sample19", "Sample20",
        "Sample21", "Sample22", "Sample23", "Sample24", "Sample25",
        "Sample26", "Sample27", "Sample28", "Sample29", "Sample30",
        "Sample31", "Sample32", "Sample33", "Sample34", "Sample35",
        "Sample36", "Sample37", "Sample38", "Sample39", "Sample40",
        "Sample41", "Sample42", "Sample43", "Sample44", "Sample45",
        "Sample46", "Sample47", "Sample48", "Sample49", "Sample50",
        ] 
    
SAMPLES_PHYLICS = ["Sample1", "Sample2"]

